C51 COMPILER V9.60.0.0   SERIAL                                                            03/19/2022 16:50:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\seria
                    -l.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          bit tx_complete = 0,rx_complete = 0; //Bit flags for interrupts
   4          
   5          /**********************************************************
   6             uart_init(): 
   7            Initialization function to be completed
   8            Initializes UART peripheral for 8-bit transfer, 
   9            1 start and 1 stop bits. 
  10            
  11            Please write TH1 value for required baud rate
  12          ***********************************************************/  
  13          void uart_init(void)
  14          {
  15   1        TMOD=0x20;      //Configure Timer 1 in Mode 2
  16   1        TH1=243;          //Load TH1 to obtain require Baudrate (Refer Serial.pdf for calculations)
  17   1        SCON=0x50;      //Configure UART peripheral for 8-bit data transfer 
  18   1                        //Start Timer 1
  19   1        TR1 = 1;
  20   1        ES = 1;
  21   1        EA = 1;
  22   1                          // Enable Serial Interrupt
  23   1                          // Enable Global Interrupt
  24   1      }
  25          
  26          
  27          /**********************************************************
  28             transmit_char(<unsigned char ch>): 
  29            Transmits a character using UART
  30          ***********************************************************/  
  31          void transmit_char(unsigned char ch)
  32          {
  33   1        SBUF=ch;        //Load data in SBUF
  34   1        while(!tx_complete);      //Wait for tx_complete flag (interrupt to complete)
  35   1        tx_complete = 0;    //Clear tx_complete flag 
  36   1      }
  37          
  38          
  39          /**********************************************************
  40             transmit_string(<String pointer>): 
  41            Transmit a string using UART
  42          ***********************************************************/  
  43          void transmit_string(unsigned char *s)
  44          {
  45   1        while(*s != 0)
  46   1        {
  47   2            transmit_char(*s++);
  48   2        }
  49   1      }
  50          
  51          
  52          /**********************************************************
  53             receive_char(): 
  54            Receives a character through UART. Returns a 
C51 COMPILER V9.60.0.0   SERIAL                                                            03/19/2022 16:50:44 PAGE 2   

  55            character.
  56          ***********************************************************/    
  57          unsigned char receive_char(void)
  58          {
  59   1        unsigned char ch = 0;
  60   1        while(!rx_complete);        //Wait for rx_complete(interrupt to complete)
  61   1        rx_complete = 0;
  62   1        ch = SBUF;          //Read data from SBUF
  63   1        return ch;          //Return read character
  64   1      }
  65          
  66          
  67          /**********************************************************
  68             Serial_ISR(): 
  69            Interrupt service routine for UART interrupt.
  70            Determines whether it is a transmit or receive
  71            interrupt and raise corresponding flag.
  72            Transmit or receive functions (defined above) monitor
  73            for these flags to check if data transfer is done.
  74          ***********************************************************/  
  75          void serial_ISR(void) interrupt 4
  76          {
  77   1          if(TI==1)     //check whether TI is set
  78   1          {
  79   2            TI = 0;     //Clear TI flag
  80   2            tx_complete = 1;  //Set tx_complete flag indicating interrupt completion
  81   2          }
  82   1          else if(RI==1)      //check whether RI is set
  83   1          {
  84   2            RI = 0;     //Clear RI flag
  85   2            rx_complete = 1;  //Set rx_complete flag indicating interrupt completion
  86   2          }
  87   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
