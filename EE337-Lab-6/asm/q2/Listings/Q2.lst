A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\Q2.obj
ASSEMBLER INVOKED BY: D:\Keil\C51\BIN\A51.EXE Q2.a51 SET(SMALL) DEBUG PRINT(.\Listings\Q2.lst) OBJECT(.\Objects\Q2.obj) EP

LOC  OBJ            LINE     SOURCE

  00A0                 1     LCD_data equ P2    ;LCD Data port
  0080                 2     LCD_rs   equ P0.0  ;LCD Register Select
  0081                 3     LCD_rw   equ P0.1  ;LCD Read/Write
  0082                 4     LCD_en   equ P0.2  ;LCD Enable
                       5     
0000                   6     ORG 0000H
0000 7570F3            7     MOV 70H, #0F3H
0003 7571B1            8     MOV 71H, #0B1H
0006 020200            9     ljmp start
                      10     
                      11     
                      12     
0009                  13     TIMER_16_BIT_50000:
0009 758901           14     MOV TMOD, #01H  
000C 758C3C           15     MOV TH0, #3CH  
000F 758AAF           16     MOV TL0, #0AFH
                      17     
0012 C28D             18     CLR TF0  
0014 D28C             19     SETB TR0  
0016 308DFD           20     LOOP21: JNB TF0, LOOP21  
0019 22               21     RET
                      22     
001A                  23     DELAY_1S:
                      24     
001A 7828             25     MOV R0, #40  
001C 1109             26     LOOP22: CALL TIMER_16_BIT_50000
001E D8FC             27     DJNZ R0, LOOP22
0020 22               28     RET
                      29     
                      30     
0021                  31     delay_1ms:
0021 C000             32     push 00h
0023 7804             33     mov r0, #4
0025 112C             34     h2: acall delay_250us
0027 D8FC             35     djnz r0, h2
0029 D000             36     pop 00h
002B 22               37     ret
                      38     
002C                  39     delay_250us:
002C C000             40     push 00h
002E 78F4             41     mov r0, #244
0030 D8FE             42     h1: djnz r0, h1
0032 D000             43     pop 00h
0034 22               44     ret
                      45     
                      46     
                      47     
                      48     
                      49     
                      50     
                      51     
0035                  52     BINARY_ASCII:
0035 E576             53     MOV A, 76H
0037 540F             54     ANL A,#0FH
                      55     
                      56     
0039 757230           57     MOV 72H, #30H
003C 757330           58     MOV 73H, #30H
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     2

003F 757430           59     MOV 74H, #30H
0042 757530           60     MOV 75H, #30H
0045 13               61     RRC A 
0046 400A             62     JC LAST_BIT_IS_1
0048                  63     SECOND_LAST_BIT:
0048 13               64     RRC A
0049 400C             65     JC SECOND_LAST_BIT_IS_1
004B                  66     THIRD_LAST_BIT:
004B 13               67     RRC A
004C 400E             68     JC THIRD_LAST_BIT_IS_1
004E                  69     FOURTH_LAST_BIT:
004E 13               70     RRC A
004F 4010             71     JC FOURTH_LAST_BIT_IS_1
                      72     
0051 22               73     RET
                      74     
                      75     
                      76     
                      77     
0052                  78     LAST_BIT_IS_1:
0052 757531           79     MOV 75H, #31H
0055 80F1             80     SJMP SECOND_LAST_BIT
0057                  81     SECOND_LAST_BIT_IS_1:
0057 757431           82     MOV 74H, #31H
005A 80EF             83     SJMP THIRD_LAST_BIT
005C                  84     THIRD_LAST_BIT_IS_1:
005C 757331           85     MOV 73H, #31H
005F 80ED             86     SJMP FOURTH_LAST_BIT
0061                  87     FOURTH_LAST_BIT_IS_1:
0061 757231           88     MOV 72H, #31H
                      89     
0064 22               90     RET
                      91     
                      92     
                      93     
                      94     
                      95     
                      96     
0200                  97     org 200h
0200                  98     start:
                      99     
0200 757023          100               mov 70H, #23H
0203 757145          101               mov 71H, #45H
0206 75A000          102           mov P2,#00h
0209 759000          103           mov P1,#00h
                     104               ;initial delay for lcd power up
                     105     
                     106             ;here1:setb p1.0
020C 1121            107               acall delay_1ms
                     108             ;clr p1.0
020E 1121            109               acall delay_1ms
                     110             ;sjmp here1
                     111     
                     112     
0210 51CF            113               acall lcd_init      ;initialise LCD
                     114               
                     115               
                     116               
0212 E570            117               mov a, 70H  
0214 C4              118               swap a  
0215 F590            119               mov P1, a  
                     120               
                     121     
0217 7480            122               mov a,#80h             ;Put cursor on first row,0 column
0219 710C            123               acall lcd_command      ;send command to LCD
                     124     
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     3

021B 900450          125               mov   dptr,#my_string1   ;Load DPTR with sring1 Addr, my_string1 = "     Level 1 
                                "
021E 712C            126               acall lcd_sendstring     ;call text strings sending routine
                     127     
                     128     
0220 74C0            129               mov a,#0C0h             ;Put cursor on second row,0 column
0222 710C            130               acall lcd_command
0224 900461          131               mov   dptr,#my_string2  
0227 712C            132               acall lcd_sendstring
                     133               
                     134               
0229 857076          135               mov 76H, 70H
022C 1135            136               acall BINARY_ASCII  
022E E572            137               mov a, 72H
0230 711B            138               acall  lcd_senddata
0232 E573            139               mov a, 73H
0234 711B            140               acall  lcd_senddata
0236 E574            141               mov a, 74H
0238 711B            142               acall  lcd_senddata
023A E575            143               mov a, 75H
023C 711B            144               acall  lcd_senddata
                     145               
023E 111A            146               acall DELAY_1S
                     147               
                     148     
                     149               
                     150               
                     151               
                     152               
0240 E570            153               mov a, 70H  
                     154               
0242 F590            155               mov P1, a  
                     156               
                     157             
                     158     
0244 7480            159               mov a,#80h             ;Put cursor on first row,0 column
0246 710C            160               acall lcd_command      ;send command to LCD
                     161     
0248 900469          162               mov   dptr,#my_string3   ;Load DPTR with sring1 Addr/ my_string3 = "     Level 2 
                                "
024B 712C            163               acall lcd_sendstring     ;call text strings sending routine
                     164     
                     165     
024D 74C0            166               mov a,#0C0h             ;Put cursor on second row,0 column
024F 710C            167               acall lcd_command
0251 900461          168               mov   dptr,#my_string2  
0254 712C            169               acall lcd_sendstring
                     170               
                     171               
0256 E570            172               mov a, 70H
0258 C4              173               swap a
0259 F576            174               mov 76H, a
025B 1135            175               acall BINARY_ASCII  
025D E572            176               mov a, 72H
025F 711B            177               acall  lcd_senddata
0261 E573            178               mov a, 73H
0263 711B            179               acall  lcd_senddata
0265 E574            180               mov a, 74H
0267 711B            181               acall  lcd_senddata
0269 E575            182               mov a, 75H
026B 711B            183               acall  lcd_senddata
                     184               
026D 111A            185               acall DELAY_1S
                     186               
                     187               
                     188               
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     4

                     189               
026F E571            190               mov a, 71H  
0271 C4              191               swap a  
0272 F590            192               mov P1, a  
                     193               
                     194             
                     195     
0274 7480            196               mov a,#80h             ;Put cursor on first row,0 column
0276 710C            197               acall lcd_command      ;send command to LCD
                     198     
0278 90047A          199               mov   dptr,#my_string4   ;Load DPTR with sring1 Addr, my_string4 = "     Level 3 
                                "
027B 712C            200               acall lcd_sendstring     ;call text strings sending routine
                     201     
                     202     
027D 74C0            203               mov a,#0C0h             ;Put cursor on second row,0 column
027F 710C            204               acall lcd_command
0281 900461          205               mov   dptr,#my_string2
0284 712C            206               acall lcd_sendstring
                     207               
                     208               
0286 857176          209               mov 76H, 71H
0289 1135            210               acall BINARY_ASCII  
028B E572            211               mov a, 72H
028D 711B            212               acall  lcd_senddata
028F E573            213               mov a, 73H
0291 711B            214               acall  lcd_senddata
0293 E574            215               mov a, 74H
0295 711B            216               acall  lcd_senddata
0297 E575            217               mov a, 75H
0299 711B            218               acall  lcd_senddata
                     219               
029B 111A            220               acall DELAY_1S
                     221               
                     222               
                     223               
029D E571            224               mov a, 71H  
                     225               
029F F590            226               mov P1, a  
                     227               
                     228             
                     229     
02A1 7480            230               mov a,#80h             ;Put cursor on first row,0 column
02A3 710C            231               acall lcd_command      ;send command to LCD
                     232     
02A5 90048B          233               mov   dptr,#my_string5   ;Load DPTR with sring1 Addr, my_string5 = "     Level 4 
                                "
02A8 712C            234               acall lcd_sendstring     ;call text strings sending routine
                     235     
                     236     
02AA 74C0            237               mov a,#0C0h             ;Put cursor on second row,0 column
02AC 710C            238               acall lcd_command
02AE 900461          239               mov   dptr,#my_string2
02B1 712C            240               acall lcd_sendstring
                     241               
                     242               
02B3 E571            243               mov a, 71H
02B5 C4              244               swap a
02B6 F576            245               mov 76H, a
02B8 1135            246               acall BINARY_ASCII  
02BA E572            247               mov a, 72H
02BC 711B            248               acall  lcd_senddata
02BE E573            249               mov a, 73H
02C0 711B            250               acall  lcd_senddata
02C2 E574            251               mov a, 74H
02C4 711B            252               acall  lcd_senddata
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     5

02C6 E575            253               mov a, 75H
02C8 711B            254               acall  lcd_senddata
                     255               
02CA 111A            256               acall DELAY_1S
                     257               
                     258               
                     259               
                     260     
02CC 020200          261     ljmp start                       
                     262     
                     263     ;------------------------LCD Initialisation routine----------------------------------------
                             ------------
02CF                 264     lcd_init:
02CF 75A038          265              mov   LCD_data,#38H  ;Function set: 2 Line, 8-bit, 5x7 dots
02D2 C280            266              clr   LCD_rs         ;Selected command register
02D4 C281            267              clr   LCD_rw         ;We are writing in instruction register
02D6 D282            268              setb  LCD_en         ;Enable H->L
02D8 713A            269                      acall delay
02DA C282            270              clr   LCD_en
02DC 713A            271                  acall delay
                     272     
02DE 75A00C          273              mov   LCD_data,#0CH  ;Display on, Curson off
02E1 C280            274              clr   LCD_rs         ;Selected instruction register
02E3 C281            275              clr   LCD_rw         ;We are writing in instruction register
02E5 D282            276              setb  LCD_en         ;Enable H->L
02E7 713A            277                      acall delay
02E9 C282            278              clr   LCD_en
                     279              
02EB 1121            280                      acall delay_1ms
02ED 75A001          281              mov   LCD_data,#01H  ;Clear LCD
02F0 C280            282              clr   LCD_rs         ;Selected command register
02F2 C281            283              clr   LCD_rw         ;We are writing in instruction register
02F4 D282            284              setb  LCD_en         ;Enable H->L
02F6 713A            285                      acall delay
02F8 C282            286              clr   LCD_en
                     287              
02FA 713A            288                      acall delay
                     289     
02FC 75A006          290              mov   LCD_data,#06H  ;Entry mode, auto increment with no shift
02FF C280            291              clr   LCD_rs         ;Selected command register
0301 C281            292              clr   LCD_rw         ;We are writing in instruction register
0303 D282            293              setb  LCD_en         ;Enable H->L
0305 713A            294                      acall delay
0307 C282            295              clr   LCD_en
                     296     
0309 713A            297                      acall delay
                     298              
030B 22              299              ret                  ;Return from routine
                     300     
                     301     ;-----------------------command sending routine-------------------------------------
030C                 302      lcd_command:
030C F5A0            303              mov   LCD_data,A     ;Move the command to LCD port
030E C280            304              clr   LCD_rs         ;Selected command register
0310 C281            305              clr   LCD_rw         ;We are writing in instruction register
0312 D282            306              setb  LCD_en         ;Enable H->L
0314 713A            307                      acall delay
0316 C282            308              clr   LCD_en
0318 713A            309                      acall delay
                     310         
031A 22              311              ret  
                     312     ;-----------------------data sending routine-------------------------------------          
                                       
031B                 313      lcd_senddata:
031B F5A0            314              mov   LCD_data,A     ;Move the command to LCD port
031D D280            315              setb  LCD_rs         ;Selected data register
031F C281            316              clr   LCD_rw         ;We are writing
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     6

0321 D282            317              setb  LCD_en         ;Enable H->L
0323 713A            318                      acall delay
0325 C282            319              clr   LCD_en
0327 713A            320              acall delay
0329 713A            321                      acall delay
032B 22              322              ret                  ;Return from busy routine
                     323     
                     324     ;-----------------------text strings sending routine-------------------------------------
032C                 325     lcd_sendstring:
032C C0E0            326             push 0e0h
032E                 327             lcd_sendstring_loop:
032E E4              328                      clr   a                 ;clear Accumulator for any previous data
032F 93              329                      movc  a,@a+dptr         ;load the first character in accumulator
0330 6005            330                      jz    exit              ;go to exit if zero
0332 711B            331                      acall lcd_senddata      ;send first char
0334 A3              332                      inc   dptr              ;increment data pointer
0335 80F7            333                      sjmp  LCD_sendstring_loop    ;jump back to send the next character
0337 D0E0            334     exit:    pop 0e0h
0339 22              335              ret                     ;End of routine 
                     336     
                     337     ;----------------------delay routine-----------------------------------------------------
033A C000            338     delay:   push 0
033C C001            339              push 1
033E 7801            340              mov r0,#1
0340 79FF            341     loop2:   mov r1,#255
0342 D9FE            342              loop1:  djnz r1, loop1
0344 D8FA            343              djnz r0, loop2
0346 D001            344              pop 1
0348 D000            345              pop 0 
034A 22              346              ret
                     347     
                     348     ;------------- ROM text strings------------------------------------------------------------
                             ---
0450                 349     org 450h
0450                 350     my_string1:
0450 20202020        351              DB   "     Level 1    ", 00H
0454 204C6576                
0458 656C2031                
045C 20202020                
0460 00                      
0461                 352     my_string2:
0461 56616C75        353                      DB   "Value: ", 00H
0465 653A2000                
0469                 354     my_string3:
0469 20202020        355                      DB   "     Level 2    ", 00H
046D 204C6576                
0471 656C2032                
0475 20202020                
0479 00                      
047A                 356     my_string4:
047A 20202020        357                      DB   "     Level 3    ", 00H
047E 204C6576                
0482 656C2033                
0486 20202020                
048A 00                      
048B                 358     my_string5:
048B 20202020        359                      DB   "     Level 4    ", 00H            
048F 204C6576                
0493 656C2034                
0497 20202020                
049B 00                      
049C                 360     my_string8:
049C 202000          361                      DB   "  ", 00H 
                     362     
                     363     
                     364     end
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     7

                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
A51 MACRO ASSEMBLER  Q2                                                                   03/07/2022 14:27:29 PAGE     8

SYMBOL TABLE LISTING
------ ----- -------


N A M E               T Y P E  V A L U E   ATTRIBUTES

BINARY_ASCII . . . .  C ADDR   0035H   A   
DELAY. . . . . . . .  C ADDR   033AH   A   
DELAY_1MS. . . . . .  C ADDR   0021H   A   
DELAY_1S . . . . . .  C ADDR   001AH   A   
DELAY_250US. . . . .  C ADDR   002CH   A   
EXIT . . . . . . . .  C ADDR   0337H   A   
FOURTH_LAST_BIT. . .  C ADDR   004EH   A   
FOURTH_LAST_BIT_IS_1  C ADDR   0061H   A   
H1 . . . . . . . . .  C ADDR   0030H   A   
H2 . . . . . . . . .  C ADDR   0025H   A   
LAST_BIT_IS_1. . . .  C ADDR   0052H   A   
LCD_COMMAND. . . . .  C ADDR   030CH   A   
LCD_DATA . . . . . .  D ADDR   00A0H   A   
LCD_EN . . . . . . .  B ADDR   0080H.2 A   
LCD_INIT . . . . . .  C ADDR   02CFH   A   
LCD_RS . . . . . . .  B ADDR   0080H.0 A   
LCD_RW . . . . . . .  B ADDR   0080H.1 A   
LCD_SENDDATA . . . .  C ADDR   031BH   A   
LCD_SENDSTRING . . .  C ADDR   032CH   A   
LCD_SENDSTRING_LOOP.  C ADDR   032EH   A   
LOOP1. . . . . . . .  C ADDR   0342H   A   
LOOP2. . . . . . . .  C ADDR   0340H   A   
LOOP21 . . . . . . .  C ADDR   0016H   A   
LOOP22 . . . . . . .  C ADDR   001CH   A   
MY_STRING1 . . . . .  C ADDR   0450H   A   
MY_STRING2 . . . . .  C ADDR   0461H   A   
MY_STRING3 . . . . .  C ADDR   0469H   A   
MY_STRING4 . . . . .  C ADDR   047AH   A   
MY_STRING5 . . . . .  C ADDR   048BH   A   
MY_STRING8 . . . . .  C ADDR   049CH   A   
P0 . . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . . .  D ADDR   00A0H   A   
SECOND_LAST_BIT. . .  C ADDR   0048H   A   
SECOND_LAST_BIT_IS_1  C ADDR   0057H   A   
START. . . . . . . .  C ADDR   0200H   A   
TF0. . . . . . . . .  B ADDR   0088H.5 A   
TH0. . . . . . . . .  D ADDR   008CH   A   
THIRD_LAST_BIT . . .  C ADDR   004BH   A   
THIRD_LAST_BIT_IS_1.  C ADDR   005CH   A   
TIMER_16_BIT_50000 .  C ADDR   0009H   A   
TL0. . . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . . .  B ADDR   0088H.4 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
